<?xml version="1.0"?>
<!-- Copyright (C) 2011 eXo Platform SAS. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.exoplatform.cloudworkspaces</groupId>
    <artifactId>cloud-workspaces-web</artifactId>
    <version>1.1.0-Beta01</version>
  </parent>

  <artifactId>cloud-workspaces-web-admin</artifactId>
  <packaging>war</packaging>
  <name>eXo Cloud Workspaces :: Admin</name>
  <description>eXo Cloud Workspaces Admin web application</description>

  <dependencies>
    <dependency>
      <groupId>com.exoplatform.cloudworkspaces</groupId>
      <artifactId>cloud-management-patch</artifactId>
      <scope>compile</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.cloud-management</groupId>
      <artifactId>cloud-admin</artifactId>
      <scope>compile</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.cloud-management</groupId>
      <artifactId>cloud-admin-valve-tomcat</artifactId>
      <scope>compile</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <scope>compile</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>com.exoplatform.platform.cloud</groupId>
      <artifactId>cloud-admin-connector-localhost</artifactId>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.cloud-management</groupId>
      <artifactId>cloud-admin-connector-ec2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.exoplatform.cloudworkspaces</groupId>
      <artifactId>cloud-workspaces-web-statistic</artifactId>
      <scope>compile</scope>
      <type>jar</type>
    </dependency>

    <!-- add exo-ide-shell dependency for using CLIResourcesService -->
    <dependency>
      <groupId>org.exoplatform.ide</groupId>
      <artifactId>exo-ide-shell</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.everrest</groupId>
          <artifactId>everrest-integration-exo</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.crsh</groupId>
          <artifactId>crsh.shell.core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.crsh</groupId>
          <artifactId>crsh.jcr</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.everrest</groupId>
      <artifactId>everrest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>dumbster</groupId>
      <artifactId>dumbster</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-shell</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.exoplatform.ide</groupId>
                  <artifactId>exo-ide-packaging-shell-war</artifactId>
                  <type>war</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/packager-conf/war</outputDirectory>
                  <destFileName>shell.war</destFileName>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/wars</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-shell-resources</id>
            <phase>process-resources</phase>
            <configuration>
              <tasks>
                <unwar src="${project.build.directory}/packager-conf/war/shell.war" dest="${project.build.directory}/packager-conf/unwar/shell"/>
                <copy todir="${project.build.directory}/${project.artifactId}-${project.version}/admin-shell">
                  <fileset dir="${project.build.directory}/packager-conf/unwar/shell">
                    <exclude name="**/META-INF/**"/>
                    <exclude name="**/WEB-INF/**"/>
                    <exclude name="**/gwt/**"/>
                    <exclude name="**/index.html"/>
                    <exclude name="**/Shell.html"/>
                  </fileset>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archiveClasses>false</archiveClasses>
          <archive>
            <manifest>
              <addClasspath>false</addClasspath>
            </manifest>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
